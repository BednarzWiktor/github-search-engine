// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search renders without crashing 1`] = `
<Search
  clearSearchResults={[MockFunction]}
  combinedResults={
    Array [
      Object {
        "name": "user1",
        "origin": "user",
        "url": "http://user1.com",
      },
      Object {
        "name": "repo1",
        "origin": "user",
        "url": "http://repo1.com",
      },
      Object {
        "name": "user2",
        "origin": "user",
        "url": "http://user2.com",
      },
      Object {
        "name": "repo2",
        "origin": "user",
        "url": "http://repo2.com",
      },
    ]
  }
  getSearchResults={[MockFunction]}
>
  <div
    className="container"
  >
    <aside
      className="filters"
    >
      <span
        className="filtersLabel"
      >
        Search within:
      </span>
      <span
        className="filtersControls"
      >
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              color="primary"
              name="Users"
              onChange={[Function]}
            />
          }
          label="Users"
        >
          <ForwardRef(FormControlLabel)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "label": "MuiFormControlLabel-label",
                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                "root": "MuiFormControlLabel-root",
              }
            }
            control={
              <ForwardRef(WithStyles)
                checked={true}
                color="primary"
                name="Users"
                onChange={[Function]}
              />
            }
            label="Users"
          >
            <label
              className="MuiFormControlLabel-root"
            >
              <WithStyles(ForwardRef(Checkbox))
                checked={true}
                color="primary"
                name="Users"
                onChange={[Function]}
              >
                <ForwardRef(Checkbox)
                  checked={true}
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "colorPrimary": "MuiCheckbox-colorPrimary",
                      "colorSecondary": "MuiCheckbox-colorSecondary",
                      "disabled": "Mui-disabled",
                      "indeterminate": "MuiCheckbox-indeterminate",
                      "root": "MuiCheckbox-root",
                    }
                  }
                  color="primary"
                  name="Users"
                  onChange={[Function]}
                >
                  <WithStyles(ForwardRef(SwitchBase))
                    checked={true}
                    checkedIcon={<UNDEFINED />}
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "disabled": "Mui-disabled",
                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                      }
                    }
                    color="primary"
                    icon={<UNDEFINED />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    name="Users"
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <ForwardRef(SwitchBase)
                      checked={true}
                      checkedIcon={<UNDEFINED />}
                      classes={
                        Object {
                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                          "input": "PrivateSwitchBase-input-4",
                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                        }
                      }
                      color="primary"
                      icon={<UNDEFINED />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      name="Users"
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                        color="primary"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(IconButton)
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="primary"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <span
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <input
                                    checked={true}
                                    className="PrivateSwitchBase-input-4"
                                    data-indeterminate={false}
                                    name="Users"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <ForwardRef(CheckBoxIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(CheckBoxIcon)>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </span>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </ForwardRef(SwitchBase)>
                  </WithStyles(ForwardRef(SwitchBase))>
                </ForwardRef(Checkbox)>
              </WithStyles(ForwardRef(Checkbox))>
              <WithStyles(ForwardRef(Typography))
                className="MuiFormControlLabel-label"
                component="span"
              >
                <ForwardRef(Typography)
                  className="MuiFormControlLabel-label"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component="span"
                >
                  <span
                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                  >
                    Users
                  </span>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </label>
          </ForwardRef(FormControlLabel)>
        </WithStyles(ForwardRef(FormControlLabel))>
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              color="primary"
              name="Repos"
              onChange={[Function]}
            />
          }
          label="Repos"
        >
          <ForwardRef(FormControlLabel)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "label": "MuiFormControlLabel-label",
                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                "root": "MuiFormControlLabel-root",
              }
            }
            control={
              <ForwardRef(WithStyles)
                checked={true}
                color="primary"
                name="Repos"
                onChange={[Function]}
              />
            }
            label="Repos"
          >
            <label
              className="MuiFormControlLabel-root"
            >
              <WithStyles(ForwardRef(Checkbox))
                checked={true}
                color="primary"
                name="Repos"
                onChange={[Function]}
              >
                <ForwardRef(Checkbox)
                  checked={true}
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "colorPrimary": "MuiCheckbox-colorPrimary",
                      "colorSecondary": "MuiCheckbox-colorSecondary",
                      "disabled": "Mui-disabled",
                      "indeterminate": "MuiCheckbox-indeterminate",
                      "root": "MuiCheckbox-root",
                    }
                  }
                  color="primary"
                  name="Repos"
                  onChange={[Function]}
                >
                  <WithStyles(ForwardRef(SwitchBase))
                    checked={true}
                    checkedIcon={<UNDEFINED />}
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "disabled": "Mui-disabled",
                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                      }
                    }
                    color="primary"
                    icon={<UNDEFINED />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    name="Repos"
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <ForwardRef(SwitchBase)
                      checked={true}
                      checkedIcon={<UNDEFINED />}
                      classes={
                        Object {
                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                          "input": "PrivateSwitchBase-input-4",
                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                        }
                      }
                      color="primary"
                      icon={<UNDEFINED />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      name="Repos"
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                        color="primary"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(IconButton)
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="primary"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <span
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <input
                                    checked={true}
                                    className="PrivateSwitchBase-input-4"
                                    data-indeterminate={false}
                                    name="Repos"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <ForwardRef(CheckBoxIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(CheckBoxIcon)>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </span>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </ForwardRef(SwitchBase)>
                  </WithStyles(ForwardRef(SwitchBase))>
                </ForwardRef(Checkbox)>
              </WithStyles(ForwardRef(Checkbox))>
              <WithStyles(ForwardRef(Typography))
                className="MuiFormControlLabel-label"
                component="span"
              >
                <ForwardRef(Typography)
                  className="MuiFormControlLabel-label"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component="span"
                >
                  <span
                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                  >
                    Repos
                  </span>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </label>
          </ForwardRef(FormControlLabel)>
        </WithStyles(ForwardRef(FormControlLabel))>
      </span>
    </aside>
    <main
      className="input"
    >
      <WithStyles(ForwardRef(Autocomplete))
        clearOnBlur={false}
        disabled={false}
        getOptionLabel={[Function]}
        getOptionSelected={[Function]}
        inputValue=""
        loading={false}
        loadingText="Fetching data..."
        onChange={[Function]}
        onInputChange={[Function]}
        options={
          Array [
            Object {
              "name": "user1",
              "origin": "user",
              "url": "http://user1.com",
            },
            Object {
              "name": "repo1",
              "origin": "user",
              "url": "http://repo1.com",
            },
            Object {
              "name": "user2",
              "origin": "user",
              "url": "http://user2.com",
            },
            Object {
              "name": "repo2",
              "origin": "user",
              "url": "http://repo2.com",
            },
          ]
        }
        renderInput={[Function]}
        renderOption={[Function]}
        value={null}
      >
        <ForwardRef(Autocomplete)
          classes={
            Object {
              "clearIndicator": "MuiAutocomplete-clearIndicator",
              "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
              "endAdornment": "MuiAutocomplete-endAdornment",
              "focused": "Mui-focused",
              "fullWidth": "MuiAutocomplete-fullWidth",
              "groupLabel": "MuiAutocomplete-groupLabel",
              "groupUl": "MuiAutocomplete-groupUl",
              "hasClearIcon": "MuiAutocomplete-hasClearIcon",
              "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
              "input": "MuiAutocomplete-input",
              "inputFocused": "MuiAutocomplete-inputFocused",
              "inputRoot": "MuiAutocomplete-inputRoot",
              "listbox": "MuiAutocomplete-listbox",
              "loading": "MuiAutocomplete-loading",
              "noOptions": "MuiAutocomplete-noOptions",
              "option": "MuiAutocomplete-option",
              "paper": "MuiAutocomplete-paper",
              "popper": "MuiAutocomplete-popper",
              "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
              "popupIndicator": "MuiAutocomplete-popupIndicator",
              "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
              "root": "MuiAutocomplete-root",
              "tag": "MuiAutocomplete-tag",
              "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
            }
          }
          clearOnBlur={false}
          disabled={false}
          getOptionLabel={[Function]}
          getOptionSelected={[Function]}
          inputValue=""
          loading={false}
          loadingText="Fetching data..."
          onChange={[Function]}
          onInputChange={[Function]}
          options={
            Array [
              Object {
                "name": "user1",
                "origin": "user",
                "url": "http://user1.com",
              },
              Object {
                "name": "repo1",
                "origin": "user",
                "url": "http://repo1.com",
              },
              Object {
                "name": "user2",
                "origin": "user",
                "url": "http://user2.com",
              },
              Object {
                "name": "repo2",
                "origin": "user",
                "url": "http://repo2.com",
              },
            ]
          }
          renderInput={[Function]}
          renderOption={[Function]}
          value={null}
        >
          <div
            aria-expanded={false}
            aria-owns={null}
            className="MuiAutocomplete-root MuiAutocomplete-hasClearIcon MuiAutocomplete-hasPopupIcon"
            onClick={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            role="combobox"
          >
            <WithStyles(ForwardRef(TextField))
              InputLabelProps={
                Object {
                  "htmlFor": "mui-77112",
                  "id": "mui-77112-label",
                }
              }
              InputProps={
                Object {
                  "className": "MuiAutocomplete-inputRoot",
                  "endAdornment": <div
                    className="MuiAutocomplete-endAdornment"
                  >
                    <ForwardRef(WithStyles)
                      aria-label="Clear"
                      className="MuiAutocomplete-clearIndicator"
                      onClick={[Function]}
                      tabIndex={-1}
                      title="Clear"
                    >
                      <UNDEFINED
                        fontSize="small"
                      />
                    </ForwardRef(WithStyles)>
                    <ForwardRef(WithStyles)
                      aria-label="Open"
                      className="MuiAutocomplete-popupIndicator"
                      disabled={false}
                      onClick={[Function]}
                      tabIndex={-1}
                      title="Open"
                    >
                      <UNDEFINED />
                    </ForwardRef(WithStyles)>
                  </div>,
                  "ref": [Function],
                  "startAdornment": undefined,
                }
              }
              disabled={false}
              fullWidth={true}
              id="mui-77112"
              inputProps={
                Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": null,
                  "autoCapitalize": "none",
                  "autoComplete": "off",
                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                  "disabled": false,
                  "id": "mui-77112",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "onMouseDown": [Function],
                  "ref": Object {
                    "current": <input
                      aria-autocomplete="list"
                      aria-invalid="false"
                      autocapitalize="none"
                      autocomplete="off"
                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                      id="mui-77112"
                      spellcheck="false"
                      type="text"
                      value=""
                    />,
                  },
                  "spellCheck": "false",
                  "value": "",
                }
              }
              label="Search GitHub"
              variant="outlined"
            >
              <ForwardRef(TextField)
                InputLabelProps={
                  Object {
                    "htmlFor": "mui-77112",
                    "id": "mui-77112-label",
                  }
                }
                InputProps={
                  Object {
                    "className": "MuiAutocomplete-inputRoot",
                    "endAdornment": <div
                      className="MuiAutocomplete-endAdornment"
                    >
                      <ForwardRef(WithStyles)
                        aria-label="Clear"
                        className="MuiAutocomplete-clearIndicator"
                        onClick={[Function]}
                        tabIndex={-1}
                        title="Clear"
                      >
                        <UNDEFINED
                          fontSize="small"
                        />
                      </ForwardRef(WithStyles)>
                      <ForwardRef(WithStyles)
                        aria-label="Open"
                        className="MuiAutocomplete-popupIndicator"
                        disabled={false}
                        onClick={[Function]}
                        tabIndex={-1}
                        title="Open"
                      >
                        <UNDEFINED />
                      </ForwardRef(WithStyles)>
                    </div>,
                    "ref": [Function],
                    "startAdornment": undefined,
                  }
                }
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                disabled={false}
                fullWidth={true}
                id="mui-77112"
                inputProps={
                  Object {
                    "aria-activedescendant": null,
                    "aria-autocomplete": "list",
                    "aria-controls": null,
                    "autoCapitalize": "none",
                    "autoComplete": "off",
                    "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                    "disabled": false,
                    "id": "mui-77112",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "onMouseDown": [Function],
                    "ref": Object {
                      "current": <input
                        aria-autocomplete="list"
                        aria-invalid="false"
                        autocapitalize="none"
                        autocomplete="off"
                        class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                        id="mui-77112"
                        spellcheck="false"
                        type="text"
                        value=""
                      />,
                    },
                    "spellCheck": "false",
                    "value": "",
                  }
                }
                label="Search GitHub"
                variant="outlined"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root"
                  color="primary"
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  required={false}
                  variant="outlined"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={true}
                    required={false}
                    variant="outlined"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                    >
                      <WithStyles(ForwardRef(InputLabel))
                        htmlFor="mui-77112"
                        id="mui-77112-label"
                      >
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                          htmlFor="mui-77112"
                          id="mui-77112-label"
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={false}
                            htmlFor="mui-77112"
                            id="mui-77112-label"
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={false}
                              htmlFor="mui-77112"
                              id="mui-77112-label"
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                data-shrink={false}
                                htmlFor="mui-77112"
                                id="mui-77112-label"
                              >
                                Search GitHub
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(OutlinedInput))
                        autoFocus={false}
                        className="MuiAutocomplete-inputRoot"
                        endAdornment={
                          <div
                            className="MuiAutocomplete-endAdornment"
                          >
                            <ForwardRef(WithStyles)
                              aria-label="Clear"
                              className="MuiAutocomplete-clearIndicator"
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Clear"
                            >
                              <UNDEFINED
                                fontSize="small"
                              />
                            </ForwardRef(WithStyles)>
                            <ForwardRef(WithStyles)
                              aria-label="Open"
                              className="MuiAutocomplete-popupIndicator"
                              disabled={false}
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Open"
                            >
                              <UNDEFINED />
                            </ForwardRef(WithStyles)>
                          </div>
                        }
                        fullWidth={true}
                        id="mui-77112"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "autoCapitalize": "none",
                            "autoComplete": "off",
                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                            "disabled": false,
                            "id": "mui-77112",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "onMouseDown": [Function],
                            "ref": Object {
                              "current": <input
                                aria-autocomplete="list"
                                aria-invalid="false"
                                autocapitalize="none"
                                autocomplete="off"
                                class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                id="mui-77112"
                                spellcheck="false"
                                type="text"
                                value=""
                              />,
                            },
                            "spellCheck": "false",
                            "value": "",
                          }
                        }
                        label={
                          <React.Fragment>
                            Search GitHub
                          </React.Fragment>
                        }
                        multiline={false}
                      >
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          className="MuiAutocomplete-inputRoot"
                          classes={
                            Object {
                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "input": "MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                              "marginDense": "MuiOutlinedInput-marginDense",
                              "multiline": "MuiOutlinedInput-multiline",
                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          endAdornment={
                            <div
                              className="MuiAutocomplete-endAdornment"
                            >
                              <ForwardRef(WithStyles)
                                aria-label="Clear"
                                className="MuiAutocomplete-clearIndicator"
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Clear"
                              >
                                <UNDEFINED
                                  fontSize="small"
                                />
                              </ForwardRef(WithStyles)>
                              <ForwardRef(WithStyles)
                                aria-label="Open"
                                className="MuiAutocomplete-popupIndicator"
                                disabled={false}
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Open"
                              >
                                <UNDEFINED />
                              </ForwardRef(WithStyles)>
                            </div>
                          }
                          fullWidth={true}
                          id="mui-77112"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "autoCapitalize": "none",
                              "autoComplete": "off",
                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                              "disabled": false,
                              "id": "mui-77112",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onMouseDown": [Function],
                              "ref": Object {
                                "current": <input
                                  aria-autocomplete="list"
                                  aria-invalid="false"
                                  autocapitalize="none"
                                  autocomplete="off"
                                  class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  id="mui-77112"
                                  spellcheck="false"
                                  type="text"
                                  value=""
                                />,
                              },
                              "spellCheck": "false",
                              "value": "",
                            }
                          }
                          label={
                            <React.Fragment>
                              Search GitHub
                            </React.Fragment>
                          }
                          multiline={false}
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            className="MuiAutocomplete-inputRoot"
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            endAdornment={
                              <div
                                className="MuiAutocomplete-endAdornment"
                              >
                                <ForwardRef(WithStyles)
                                  aria-label="Clear"
                                  className="MuiAutocomplete-clearIndicator"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Clear"
                                >
                                  <UNDEFINED
                                    fontSize="small"
                                  />
                                </ForwardRef(WithStyles)>
                                <ForwardRef(WithStyles)
                                  aria-label="Open"
                                  className="MuiAutocomplete-popupIndicator"
                                  disabled={false}
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Open"
                                >
                                  <UNDEFINED />
                                </ForwardRef(WithStyles)>
                              </div>
                            }
                            fullWidth={true}
                            id="mui-77112"
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "autoCapitalize": "none",
                                "autoComplete": "off",
                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                "disabled": false,
                                "id": "mui-77112",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "onMouseDown": [Function],
                                "ref": Object {
                                  "current": <input
                                    aria-autocomplete="list"
                                    aria-invalid="false"
                                    autocapitalize="none"
                                    autocomplete="off"
                                    class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                    id="mui-77112"
                                    spellcheck="false"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "spellCheck": "false",
                                "value": "",
                              }
                            }
                            multiline={false}
                            renderSuffix={[Function]}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              className="MuiAutocomplete-inputRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                }
                              }
                              endAdornment={
                                <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <ForwardRef(WithStyles)
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <UNDEFINED
                                      fontSize="small"
                                    />
                                  </ForwardRef(WithStyles)>
                                  <ForwardRef(WithStyles)
                                    aria-label="Open"
                                    className="MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <UNDEFINED />
                                  </ForwardRef(WithStyles)>
                                </div>
                              }
                              fullWidth={true}
                              id="mui-77112"
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-activedescendant": null,
                                  "aria-autocomplete": "list",
                                  "aria-controls": null,
                                  "autoCapitalize": "none",
                                  "autoComplete": "off",
                                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                  "disabled": false,
                                  "id": "mui-77112",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onMouseDown": [Function],
                                  "ref": Object {
                                    "current": <input
                                      aria-autocomplete="list"
                                      aria-invalid="false"
                                      autocapitalize="none"
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="mui-77112"
                                      spellcheck="false"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "spellCheck": "false",
                                  "value": "",
                                }
                              }
                              multiline={false}
                              renderSuffix={[Function]}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                onClick={[Function]}
                              >
                                <input
                                  aria-activedescendant={null}
                                  aria-autocomplete="list"
                                  aria-controls={null}
                                  aria-invalid={false}
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  disabled={false}
                                  id="mui-77112"
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  required={false}
                                  spellCheck="false"
                                  type="text"
                                  value=""
                                />
                                <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="Clear"
                                      className="MuiAutocomplete-clearIndicator"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Clear"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-label="Clear"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-label="Clear"
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Clear"
                                        >
                                          <button
                                            aria-label="Clear"
                                            className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Clear"
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef(CloseIcon)
                                                fontSize="small"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  fontSize="small"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                    fontSize="small"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CloseIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Open"
                                    className="MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="Open"
                                      className="MuiAutocomplete-popupIndicator"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      disabled={false}
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Open"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-label="Open"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Open"
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-label="Open"
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Open"
                                        >
                                          <button
                                            aria-label="Open"
                                            className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-popupIndicator"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Open"
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef(ArrowDropDownIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 10l5 5 5-5z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(ArrowDropDownIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </div>
                                <WithStyles(ForwardRef(NotchedOutline))
                                  className="MuiOutlinedInput-notchedOutline"
                                  label={
                                    <React.Fragment>
                                      Search GitHub
                                    </React.Fragment>
                                  }
                                  labelWidth={0}
                                  notched={false}
                                >
                                  <ForwardRef(NotchedOutline)
                                    className="MuiOutlinedInput-notchedOutline"
                                    classes={
                                      Object {
                                        "legend": "PrivateNotchedOutline-legend-6",
                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                        "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                        "root": "PrivateNotchedOutline-root-5",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Search GitHub
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <fieldset
                                      aria-hidden={true}
                                      className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                    >
                                      <legend
                                        className="PrivateNotchedOutline-legendLabelled-7"
                                      >
                                        <span>
                                          Search GitHub
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </ForwardRef(NotchedOutline)>
                                </WithStyles(ForwardRef(NotchedOutline))>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(OutlinedInput)>
                      </WithStyles(ForwardRef(OutlinedInput))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
          </div>
        </ForwardRef(Autocomplete)>
      </WithStyles(ForwardRef(Autocomplete))>
    </main>
  </div>
</Search>
`;

exports[`Search renders without crashing 2`] = `
<Search
  clearSearchResults={[MockFunction]}
  combinedResults={
    Array [
      Object {
        "name": "user1",
        "origin": "user",
        "url": "http://user1.com",
      },
      Object {
        "name": "repo1",
        "origin": "user",
        "url": "http://repo1.com",
      },
      Object {
        "name": "user2",
        "origin": "user",
        "url": "http://user2.com",
      },
      Object {
        "name": "repo2",
        "origin": "user",
        "url": "http://repo2.com",
      },
    ]
  }
  getSearchResults={[MockFunction]}
  isLoading={true}
>
  <div
    className="container"
  >
    <aside
      className="filters"
    >
      <span
        className="filtersLabel"
      >
        Search within:
      </span>
      <span
        className="filtersControls"
      >
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              color="primary"
              name="Users"
              onChange={[Function]}
            />
          }
          label="Users"
        >
          <ForwardRef(FormControlLabel)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "label": "MuiFormControlLabel-label",
                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                "root": "MuiFormControlLabel-root",
              }
            }
            control={
              <ForwardRef(WithStyles)
                checked={true}
                color="primary"
                name="Users"
                onChange={[Function]}
              />
            }
            label="Users"
          >
            <label
              className="MuiFormControlLabel-root"
            >
              <WithStyles(ForwardRef(Checkbox))
                checked={true}
                color="primary"
                name="Users"
                onChange={[Function]}
              >
                <ForwardRef(Checkbox)
                  checked={true}
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "colorPrimary": "MuiCheckbox-colorPrimary",
                      "colorSecondary": "MuiCheckbox-colorSecondary",
                      "disabled": "Mui-disabled",
                      "indeterminate": "MuiCheckbox-indeterminate",
                      "root": "MuiCheckbox-root",
                    }
                  }
                  color="primary"
                  name="Users"
                  onChange={[Function]}
                >
                  <WithStyles(ForwardRef(SwitchBase))
                    checked={true}
                    checkedIcon={<UNDEFINED />}
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "disabled": "Mui-disabled",
                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                      }
                    }
                    color="primary"
                    icon={<UNDEFINED />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    name="Users"
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <ForwardRef(SwitchBase)
                      checked={true}
                      checkedIcon={<UNDEFINED />}
                      classes={
                        Object {
                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                          "input": "PrivateSwitchBase-input-4",
                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                        }
                      }
                      color="primary"
                      icon={<UNDEFINED />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      name="Users"
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                        color="primary"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(IconButton)
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="primary"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <span
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <input
                                    checked={true}
                                    className="PrivateSwitchBase-input-4"
                                    data-indeterminate={false}
                                    name="Users"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <ForwardRef(CheckBoxIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(CheckBoxIcon)>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </span>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </ForwardRef(SwitchBase)>
                  </WithStyles(ForwardRef(SwitchBase))>
                </ForwardRef(Checkbox)>
              </WithStyles(ForwardRef(Checkbox))>
              <WithStyles(ForwardRef(Typography))
                className="MuiFormControlLabel-label"
                component="span"
              >
                <ForwardRef(Typography)
                  className="MuiFormControlLabel-label"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component="span"
                >
                  <span
                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                  >
                    Users
                  </span>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </label>
          </ForwardRef(FormControlLabel)>
        </WithStyles(ForwardRef(FormControlLabel))>
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              color="primary"
              name="Repos"
              onChange={[Function]}
            />
          }
          label="Repos"
        >
          <ForwardRef(FormControlLabel)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "label": "MuiFormControlLabel-label",
                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                "root": "MuiFormControlLabel-root",
              }
            }
            control={
              <ForwardRef(WithStyles)
                checked={true}
                color="primary"
                name="Repos"
                onChange={[Function]}
              />
            }
            label="Repos"
          >
            <label
              className="MuiFormControlLabel-root"
            >
              <WithStyles(ForwardRef(Checkbox))
                checked={true}
                color="primary"
                name="Repos"
                onChange={[Function]}
              >
                <ForwardRef(Checkbox)
                  checked={true}
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "colorPrimary": "MuiCheckbox-colorPrimary",
                      "colorSecondary": "MuiCheckbox-colorSecondary",
                      "disabled": "Mui-disabled",
                      "indeterminate": "MuiCheckbox-indeterminate",
                      "root": "MuiCheckbox-root",
                    }
                  }
                  color="primary"
                  name="Repos"
                  onChange={[Function]}
                >
                  <WithStyles(ForwardRef(SwitchBase))
                    checked={true}
                    checkedIcon={<UNDEFINED />}
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "disabled": "Mui-disabled",
                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                      }
                    }
                    color="primary"
                    icon={<UNDEFINED />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    name="Repos"
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <ForwardRef(SwitchBase)
                      checked={true}
                      checkedIcon={<UNDEFINED />}
                      classes={
                        Object {
                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                          "input": "PrivateSwitchBase-input-4",
                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                        }
                      }
                      color="primary"
                      icon={<UNDEFINED />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      name="Repos"
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                        color="primary"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(IconButton)
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="primary"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <span
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <input
                                    checked={true}
                                    className="PrivateSwitchBase-input-4"
                                    data-indeterminate={false}
                                    name="Repos"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <ForwardRef(CheckBoxIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(CheckBoxIcon)>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </span>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </ForwardRef(SwitchBase)>
                  </WithStyles(ForwardRef(SwitchBase))>
                </ForwardRef(Checkbox)>
              </WithStyles(ForwardRef(Checkbox))>
              <WithStyles(ForwardRef(Typography))
                className="MuiFormControlLabel-label"
                component="span"
              >
                <ForwardRef(Typography)
                  className="MuiFormControlLabel-label"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component="span"
                >
                  <span
                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                  >
                    Repos
                  </span>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </label>
          </ForwardRef(FormControlLabel)>
        </WithStyles(ForwardRef(FormControlLabel))>
      </span>
    </aside>
    <main
      className="input"
    >
      <WithStyles(ForwardRef(Autocomplete))
        clearOnBlur={false}
        disabled={false}
        getOptionLabel={[Function]}
        getOptionSelected={[Function]}
        inputValue=""
        loading={true}
        loadingText="Fetching data..."
        onChange={[Function]}
        onInputChange={[Function]}
        options={
          Array [
            Object {
              "name": "user1",
              "origin": "user",
              "url": "http://user1.com",
            },
            Object {
              "name": "repo1",
              "origin": "user",
              "url": "http://repo1.com",
            },
            Object {
              "name": "user2",
              "origin": "user",
              "url": "http://user2.com",
            },
            Object {
              "name": "repo2",
              "origin": "user",
              "url": "http://repo2.com",
            },
          ]
        }
        renderInput={[Function]}
        renderOption={[Function]}
        value={null}
      >
        <ForwardRef(Autocomplete)
          classes={
            Object {
              "clearIndicator": "MuiAutocomplete-clearIndicator",
              "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
              "endAdornment": "MuiAutocomplete-endAdornment",
              "focused": "Mui-focused",
              "fullWidth": "MuiAutocomplete-fullWidth",
              "groupLabel": "MuiAutocomplete-groupLabel",
              "groupUl": "MuiAutocomplete-groupUl",
              "hasClearIcon": "MuiAutocomplete-hasClearIcon",
              "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
              "input": "MuiAutocomplete-input",
              "inputFocused": "MuiAutocomplete-inputFocused",
              "inputRoot": "MuiAutocomplete-inputRoot",
              "listbox": "MuiAutocomplete-listbox",
              "loading": "MuiAutocomplete-loading",
              "noOptions": "MuiAutocomplete-noOptions",
              "option": "MuiAutocomplete-option",
              "paper": "MuiAutocomplete-paper",
              "popper": "MuiAutocomplete-popper",
              "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
              "popupIndicator": "MuiAutocomplete-popupIndicator",
              "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
              "root": "MuiAutocomplete-root",
              "tag": "MuiAutocomplete-tag",
              "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
            }
          }
          clearOnBlur={false}
          disabled={false}
          getOptionLabel={[Function]}
          getOptionSelected={[Function]}
          inputValue=""
          loading={true}
          loadingText="Fetching data..."
          onChange={[Function]}
          onInputChange={[Function]}
          options={
            Array [
              Object {
                "name": "user1",
                "origin": "user",
                "url": "http://user1.com",
              },
              Object {
                "name": "repo1",
                "origin": "user",
                "url": "http://repo1.com",
              },
              Object {
                "name": "user2",
                "origin": "user",
                "url": "http://user2.com",
              },
              Object {
                "name": "repo2",
                "origin": "user",
                "url": "http://repo2.com",
              },
            ]
          }
          renderInput={[Function]}
          renderOption={[Function]}
          value={null}
        >
          <div
            aria-expanded={false}
            aria-owns={null}
            className="MuiAutocomplete-root MuiAutocomplete-hasClearIcon MuiAutocomplete-hasPopupIcon"
            onClick={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            role="combobox"
          >
            <WithStyles(ForwardRef(TextField))
              InputLabelProps={
                Object {
                  "htmlFor": "mui-32444",
                  "id": "mui-32444-label",
                }
              }
              InputProps={
                Object {
                  "className": "MuiAutocomplete-inputRoot",
                  "endAdornment": <div
                    className="MuiAutocomplete-endAdornment"
                  >
                    <ForwardRef(WithStyles)
                      aria-label="Clear"
                      className="MuiAutocomplete-clearIndicator"
                      onClick={[Function]}
                      tabIndex={-1}
                      title="Clear"
                    >
                      <UNDEFINED
                        fontSize="small"
                      />
                    </ForwardRef(WithStyles)>
                    <ForwardRef(WithStyles)
                      aria-label="Open"
                      className="MuiAutocomplete-popupIndicator"
                      disabled={false}
                      onClick={[Function]}
                      tabIndex={-1}
                      title="Open"
                    >
                      <UNDEFINED />
                    </ForwardRef(WithStyles)>
                  </div>,
                  "ref": [Function],
                  "startAdornment": undefined,
                }
              }
              disabled={false}
              fullWidth={true}
              id="mui-32444"
              inputProps={
                Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": null,
                  "autoCapitalize": "none",
                  "autoComplete": "off",
                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                  "disabled": false,
                  "id": "mui-32444",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "onMouseDown": [Function],
                  "ref": Object {
                    "current": <input
                      aria-autocomplete="list"
                      aria-invalid="false"
                      autocapitalize="none"
                      autocomplete="off"
                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                      id="mui-32444"
                      spellcheck="false"
                      type="text"
                      value=""
                    />,
                  },
                  "spellCheck": "false",
                  "value": "",
                }
              }
              label="Search GitHub"
              variant="outlined"
            >
              <ForwardRef(TextField)
                InputLabelProps={
                  Object {
                    "htmlFor": "mui-32444",
                    "id": "mui-32444-label",
                  }
                }
                InputProps={
                  Object {
                    "className": "MuiAutocomplete-inputRoot",
                    "endAdornment": <div
                      className="MuiAutocomplete-endAdornment"
                    >
                      <ForwardRef(WithStyles)
                        aria-label="Clear"
                        className="MuiAutocomplete-clearIndicator"
                        onClick={[Function]}
                        tabIndex={-1}
                        title="Clear"
                      >
                        <UNDEFINED
                          fontSize="small"
                        />
                      </ForwardRef(WithStyles)>
                      <ForwardRef(WithStyles)
                        aria-label="Open"
                        className="MuiAutocomplete-popupIndicator"
                        disabled={false}
                        onClick={[Function]}
                        tabIndex={-1}
                        title="Open"
                      >
                        <UNDEFINED />
                      </ForwardRef(WithStyles)>
                    </div>,
                    "ref": [Function],
                    "startAdornment": undefined,
                  }
                }
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                disabled={false}
                fullWidth={true}
                id="mui-32444"
                inputProps={
                  Object {
                    "aria-activedescendant": null,
                    "aria-autocomplete": "list",
                    "aria-controls": null,
                    "autoCapitalize": "none",
                    "autoComplete": "off",
                    "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                    "disabled": false,
                    "id": "mui-32444",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "onMouseDown": [Function],
                    "ref": Object {
                      "current": <input
                        aria-autocomplete="list"
                        aria-invalid="false"
                        autocapitalize="none"
                        autocomplete="off"
                        class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                        id="mui-32444"
                        spellcheck="false"
                        type="text"
                        value=""
                      />,
                    },
                    "spellCheck": "false",
                    "value": "",
                  }
                }
                label="Search GitHub"
                variant="outlined"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root"
                  color="primary"
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  required={false}
                  variant="outlined"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={true}
                    required={false}
                    variant="outlined"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                    >
                      <WithStyles(ForwardRef(InputLabel))
                        htmlFor="mui-32444"
                        id="mui-32444-label"
                      >
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                          htmlFor="mui-32444"
                          id="mui-32444-label"
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={false}
                            htmlFor="mui-32444"
                            id="mui-32444-label"
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={false}
                              htmlFor="mui-32444"
                              id="mui-32444-label"
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                data-shrink={false}
                                htmlFor="mui-32444"
                                id="mui-32444-label"
                              >
                                Search GitHub
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(OutlinedInput))
                        autoFocus={false}
                        className="MuiAutocomplete-inputRoot"
                        endAdornment={
                          <div
                            className="MuiAutocomplete-endAdornment"
                          >
                            <ForwardRef(WithStyles)
                              aria-label="Clear"
                              className="MuiAutocomplete-clearIndicator"
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Clear"
                            >
                              <UNDEFINED
                                fontSize="small"
                              />
                            </ForwardRef(WithStyles)>
                            <ForwardRef(WithStyles)
                              aria-label="Open"
                              className="MuiAutocomplete-popupIndicator"
                              disabled={false}
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Open"
                            >
                              <UNDEFINED />
                            </ForwardRef(WithStyles)>
                          </div>
                        }
                        fullWidth={true}
                        id="mui-32444"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "autoCapitalize": "none",
                            "autoComplete": "off",
                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                            "disabled": false,
                            "id": "mui-32444",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "onMouseDown": [Function],
                            "ref": Object {
                              "current": <input
                                aria-autocomplete="list"
                                aria-invalid="false"
                                autocapitalize="none"
                                autocomplete="off"
                                class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                id="mui-32444"
                                spellcheck="false"
                                type="text"
                                value=""
                              />,
                            },
                            "spellCheck": "false",
                            "value": "",
                          }
                        }
                        label={
                          <React.Fragment>
                            Search GitHub
                          </React.Fragment>
                        }
                        multiline={false}
                      >
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          className="MuiAutocomplete-inputRoot"
                          classes={
                            Object {
                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "input": "MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                              "marginDense": "MuiOutlinedInput-marginDense",
                              "multiline": "MuiOutlinedInput-multiline",
                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          endAdornment={
                            <div
                              className="MuiAutocomplete-endAdornment"
                            >
                              <ForwardRef(WithStyles)
                                aria-label="Clear"
                                className="MuiAutocomplete-clearIndicator"
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Clear"
                              >
                                <UNDEFINED
                                  fontSize="small"
                                />
                              </ForwardRef(WithStyles)>
                              <ForwardRef(WithStyles)
                                aria-label="Open"
                                className="MuiAutocomplete-popupIndicator"
                                disabled={false}
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Open"
                              >
                                <UNDEFINED />
                              </ForwardRef(WithStyles)>
                            </div>
                          }
                          fullWidth={true}
                          id="mui-32444"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "autoCapitalize": "none",
                              "autoComplete": "off",
                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                              "disabled": false,
                              "id": "mui-32444",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onMouseDown": [Function],
                              "ref": Object {
                                "current": <input
                                  aria-autocomplete="list"
                                  aria-invalid="false"
                                  autocapitalize="none"
                                  autocomplete="off"
                                  class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  id="mui-32444"
                                  spellcheck="false"
                                  type="text"
                                  value=""
                                />,
                              },
                              "spellCheck": "false",
                              "value": "",
                            }
                          }
                          label={
                            <React.Fragment>
                              Search GitHub
                            </React.Fragment>
                          }
                          multiline={false}
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            className="MuiAutocomplete-inputRoot"
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            endAdornment={
                              <div
                                className="MuiAutocomplete-endAdornment"
                              >
                                <ForwardRef(WithStyles)
                                  aria-label="Clear"
                                  className="MuiAutocomplete-clearIndicator"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Clear"
                                >
                                  <UNDEFINED
                                    fontSize="small"
                                  />
                                </ForwardRef(WithStyles)>
                                <ForwardRef(WithStyles)
                                  aria-label="Open"
                                  className="MuiAutocomplete-popupIndicator"
                                  disabled={false}
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Open"
                                >
                                  <UNDEFINED />
                                </ForwardRef(WithStyles)>
                              </div>
                            }
                            fullWidth={true}
                            id="mui-32444"
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "autoCapitalize": "none",
                                "autoComplete": "off",
                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                "disabled": false,
                                "id": "mui-32444",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "onMouseDown": [Function],
                                "ref": Object {
                                  "current": <input
                                    aria-autocomplete="list"
                                    aria-invalid="false"
                                    autocapitalize="none"
                                    autocomplete="off"
                                    class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                    id="mui-32444"
                                    spellcheck="false"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "spellCheck": "false",
                                "value": "",
                              }
                            }
                            multiline={false}
                            renderSuffix={[Function]}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              className="MuiAutocomplete-inputRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                }
                              }
                              endAdornment={
                                <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <ForwardRef(WithStyles)
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <UNDEFINED
                                      fontSize="small"
                                    />
                                  </ForwardRef(WithStyles)>
                                  <ForwardRef(WithStyles)
                                    aria-label="Open"
                                    className="MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <UNDEFINED />
                                  </ForwardRef(WithStyles)>
                                </div>
                              }
                              fullWidth={true}
                              id="mui-32444"
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-activedescendant": null,
                                  "aria-autocomplete": "list",
                                  "aria-controls": null,
                                  "autoCapitalize": "none",
                                  "autoComplete": "off",
                                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                  "disabled": false,
                                  "id": "mui-32444",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onMouseDown": [Function],
                                  "ref": Object {
                                    "current": <input
                                      aria-autocomplete="list"
                                      aria-invalid="false"
                                      autocapitalize="none"
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="mui-32444"
                                      spellcheck="false"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "spellCheck": "false",
                                  "value": "",
                                }
                              }
                              multiline={false}
                              renderSuffix={[Function]}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                onClick={[Function]}
                              >
                                <input
                                  aria-activedescendant={null}
                                  aria-autocomplete="list"
                                  aria-controls={null}
                                  aria-invalid={false}
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  disabled={false}
                                  id="mui-32444"
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  required={false}
                                  spellCheck="false"
                                  type="text"
                                  value=""
                                />
                                <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="Clear"
                                      className="MuiAutocomplete-clearIndicator"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Clear"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-label="Clear"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-label="Clear"
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Clear"
                                        >
                                          <button
                                            aria-label="Clear"
                                            className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Clear"
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef(CloseIcon)
                                                fontSize="small"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  fontSize="small"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                    fontSize="small"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CloseIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Open"
                                    className="MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="Open"
                                      className="MuiAutocomplete-popupIndicator"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      disabled={false}
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Open"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-label="Open"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Open"
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-label="Open"
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Open"
                                        >
                                          <button
                                            aria-label="Open"
                                            className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-popupIndicator"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Open"
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef(ArrowDropDownIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 10l5 5 5-5z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(ArrowDropDownIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </div>
                                <WithStyles(ForwardRef(NotchedOutline))
                                  className="MuiOutlinedInput-notchedOutline"
                                  label={
                                    <React.Fragment>
                                      Search GitHub
                                    </React.Fragment>
                                  }
                                  labelWidth={0}
                                  notched={false}
                                >
                                  <ForwardRef(NotchedOutline)
                                    className="MuiOutlinedInput-notchedOutline"
                                    classes={
                                      Object {
                                        "legend": "PrivateNotchedOutline-legend-6",
                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                        "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                        "root": "PrivateNotchedOutline-root-5",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Search GitHub
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <fieldset
                                      aria-hidden={true}
                                      className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                    >
                                      <legend
                                        className="PrivateNotchedOutline-legendLabelled-7"
                                      >
                                        <span>
                                          Search GitHub
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </ForwardRef(NotchedOutline)>
                                </WithStyles(ForwardRef(NotchedOutline))>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(OutlinedInput)>
                      </WithStyles(ForwardRef(OutlinedInput))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
          </div>
        </ForwardRef(Autocomplete)>
      </WithStyles(ForwardRef(Autocomplete))>
    </main>
  </div>
</Search>
`;

exports[`Search renders without crashing 3`] = `
<Search
  clearSearchResults={[MockFunction]}
  combinedResults={Array []}
  getSearchResults={[MockFunction]}
>
  <div
    className="container"
  >
    <aside
      className="filters"
    >
      <span
        className="filtersLabel"
      >
        Search within:
      </span>
      <span
        className="filtersControls"
      >
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              color="primary"
              name="Users"
              onChange={[Function]}
            />
          }
          label="Users"
        >
          <ForwardRef(FormControlLabel)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "label": "MuiFormControlLabel-label",
                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                "root": "MuiFormControlLabel-root",
              }
            }
            control={
              <ForwardRef(WithStyles)
                checked={true}
                color="primary"
                name="Users"
                onChange={[Function]}
              />
            }
            label="Users"
          >
            <label
              className="MuiFormControlLabel-root"
            >
              <WithStyles(ForwardRef(Checkbox))
                checked={true}
                color="primary"
                name="Users"
                onChange={[Function]}
              >
                <ForwardRef(Checkbox)
                  checked={true}
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "colorPrimary": "MuiCheckbox-colorPrimary",
                      "colorSecondary": "MuiCheckbox-colorSecondary",
                      "disabled": "Mui-disabled",
                      "indeterminate": "MuiCheckbox-indeterminate",
                      "root": "MuiCheckbox-root",
                    }
                  }
                  color="primary"
                  name="Users"
                  onChange={[Function]}
                >
                  <WithStyles(ForwardRef(SwitchBase))
                    checked={true}
                    checkedIcon={<UNDEFINED />}
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "disabled": "Mui-disabled",
                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                      }
                    }
                    color="primary"
                    icon={<UNDEFINED />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    name="Users"
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <ForwardRef(SwitchBase)
                      checked={true}
                      checkedIcon={<UNDEFINED />}
                      classes={
                        Object {
                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                          "input": "PrivateSwitchBase-input-4",
                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                        }
                      }
                      color="primary"
                      icon={<UNDEFINED />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      name="Users"
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                        color="primary"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(IconButton)
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="primary"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <span
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <input
                                    checked={true}
                                    className="PrivateSwitchBase-input-4"
                                    data-indeterminate={false}
                                    name="Users"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <ForwardRef(CheckBoxIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(CheckBoxIcon)>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </span>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </ForwardRef(SwitchBase)>
                  </WithStyles(ForwardRef(SwitchBase))>
                </ForwardRef(Checkbox)>
              </WithStyles(ForwardRef(Checkbox))>
              <WithStyles(ForwardRef(Typography))
                className="MuiFormControlLabel-label"
                component="span"
              >
                <ForwardRef(Typography)
                  className="MuiFormControlLabel-label"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component="span"
                >
                  <span
                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                  >
                    Users
                  </span>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </label>
          </ForwardRef(FormControlLabel)>
        </WithStyles(ForwardRef(FormControlLabel))>
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              color="primary"
              name="Repos"
              onChange={[Function]}
            />
          }
          label="Repos"
        >
          <ForwardRef(FormControlLabel)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "label": "MuiFormControlLabel-label",
                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                "root": "MuiFormControlLabel-root",
              }
            }
            control={
              <ForwardRef(WithStyles)
                checked={true}
                color="primary"
                name="Repos"
                onChange={[Function]}
              />
            }
            label="Repos"
          >
            <label
              className="MuiFormControlLabel-root"
            >
              <WithStyles(ForwardRef(Checkbox))
                checked={true}
                color="primary"
                name="Repos"
                onChange={[Function]}
              >
                <ForwardRef(Checkbox)
                  checked={true}
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "colorPrimary": "MuiCheckbox-colorPrimary",
                      "colorSecondary": "MuiCheckbox-colorSecondary",
                      "disabled": "Mui-disabled",
                      "indeterminate": "MuiCheckbox-indeterminate",
                      "root": "MuiCheckbox-root",
                    }
                  }
                  color="primary"
                  name="Repos"
                  onChange={[Function]}
                >
                  <WithStyles(ForwardRef(SwitchBase))
                    checked={true}
                    checkedIcon={<UNDEFINED />}
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "disabled": "Mui-disabled",
                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                      }
                    }
                    color="primary"
                    icon={<UNDEFINED />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    name="Repos"
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <ForwardRef(SwitchBase)
                      checked={true}
                      checkedIcon={<UNDEFINED />}
                      classes={
                        Object {
                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                          "input": "PrivateSwitchBase-input-4",
                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                        }
                      }
                      color="primary"
                      icon={<UNDEFINED />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      name="Repos"
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                        color="primary"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(IconButton)
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="primary"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <span
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <input
                                    checked={true}
                                    className="PrivateSwitchBase-input-4"
                                    data-indeterminate={false}
                                    name="Repos"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <ForwardRef(CheckBoxIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(CheckBoxIcon)>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </span>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </ForwardRef(SwitchBase)>
                  </WithStyles(ForwardRef(SwitchBase))>
                </ForwardRef(Checkbox)>
              </WithStyles(ForwardRef(Checkbox))>
              <WithStyles(ForwardRef(Typography))
                className="MuiFormControlLabel-label"
                component="span"
              >
                <ForwardRef(Typography)
                  className="MuiFormControlLabel-label"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component="span"
                >
                  <span
                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                  >
                    Repos
                  </span>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </label>
          </ForwardRef(FormControlLabel)>
        </WithStyles(ForwardRef(FormControlLabel))>
      </span>
    </aside>
    <main
      className="input"
    >
      <WithStyles(ForwardRef(Autocomplete))
        clearOnBlur={false}
        disabled={false}
        getOptionLabel={[Function]}
        getOptionSelected={[Function]}
        inputValue=""
        loading={false}
        loadingText="Fetching data..."
        onChange={[Function]}
        onInputChange={[Function]}
        options={Array []}
        renderInput={[Function]}
        renderOption={[Function]}
        value={null}
      >
        <ForwardRef(Autocomplete)
          classes={
            Object {
              "clearIndicator": "MuiAutocomplete-clearIndicator",
              "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
              "endAdornment": "MuiAutocomplete-endAdornment",
              "focused": "Mui-focused",
              "fullWidth": "MuiAutocomplete-fullWidth",
              "groupLabel": "MuiAutocomplete-groupLabel",
              "groupUl": "MuiAutocomplete-groupUl",
              "hasClearIcon": "MuiAutocomplete-hasClearIcon",
              "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
              "input": "MuiAutocomplete-input",
              "inputFocused": "MuiAutocomplete-inputFocused",
              "inputRoot": "MuiAutocomplete-inputRoot",
              "listbox": "MuiAutocomplete-listbox",
              "loading": "MuiAutocomplete-loading",
              "noOptions": "MuiAutocomplete-noOptions",
              "option": "MuiAutocomplete-option",
              "paper": "MuiAutocomplete-paper",
              "popper": "MuiAutocomplete-popper",
              "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
              "popupIndicator": "MuiAutocomplete-popupIndicator",
              "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
              "root": "MuiAutocomplete-root",
              "tag": "MuiAutocomplete-tag",
              "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
            }
          }
          clearOnBlur={false}
          disabled={false}
          getOptionLabel={[Function]}
          getOptionSelected={[Function]}
          inputValue=""
          loading={false}
          loadingText="Fetching data..."
          onChange={[Function]}
          onInputChange={[Function]}
          options={Array []}
          renderInput={[Function]}
          renderOption={[Function]}
          value={null}
        >
          <div
            aria-expanded={false}
            aria-owns={null}
            className="MuiAutocomplete-root MuiAutocomplete-hasClearIcon MuiAutocomplete-hasPopupIcon"
            onClick={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            role="combobox"
          >
            <WithStyles(ForwardRef(TextField))
              InputLabelProps={
                Object {
                  "htmlFor": "mui-60608",
                  "id": "mui-60608-label",
                }
              }
              InputProps={
                Object {
                  "className": "MuiAutocomplete-inputRoot",
                  "endAdornment": <div
                    className="MuiAutocomplete-endAdornment"
                  >
                    <ForwardRef(WithStyles)
                      aria-label="Clear"
                      className="MuiAutocomplete-clearIndicator"
                      onClick={[Function]}
                      tabIndex={-1}
                      title="Clear"
                    >
                      <UNDEFINED
                        fontSize="small"
                      />
                    </ForwardRef(WithStyles)>
                    <ForwardRef(WithStyles)
                      aria-label="Open"
                      className="MuiAutocomplete-popupIndicator"
                      disabled={false}
                      onClick={[Function]}
                      tabIndex={-1}
                      title="Open"
                    >
                      <UNDEFINED />
                    </ForwardRef(WithStyles)>
                  </div>,
                  "ref": [Function],
                  "startAdornment": undefined,
                }
              }
              disabled={false}
              fullWidth={true}
              id="mui-60608"
              inputProps={
                Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": null,
                  "autoCapitalize": "none",
                  "autoComplete": "off",
                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                  "disabled": false,
                  "id": "mui-60608",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "onMouseDown": [Function],
                  "ref": Object {
                    "current": <input
                      aria-autocomplete="list"
                      aria-invalid="false"
                      autocapitalize="none"
                      autocomplete="off"
                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                      id="mui-60608"
                      spellcheck="false"
                      type="text"
                      value=""
                    />,
                  },
                  "spellCheck": "false",
                  "value": "",
                }
              }
              label="Search GitHub"
              variant="outlined"
            >
              <ForwardRef(TextField)
                InputLabelProps={
                  Object {
                    "htmlFor": "mui-60608",
                    "id": "mui-60608-label",
                  }
                }
                InputProps={
                  Object {
                    "className": "MuiAutocomplete-inputRoot",
                    "endAdornment": <div
                      className="MuiAutocomplete-endAdornment"
                    >
                      <ForwardRef(WithStyles)
                        aria-label="Clear"
                        className="MuiAutocomplete-clearIndicator"
                        onClick={[Function]}
                        tabIndex={-1}
                        title="Clear"
                      >
                        <UNDEFINED
                          fontSize="small"
                        />
                      </ForwardRef(WithStyles)>
                      <ForwardRef(WithStyles)
                        aria-label="Open"
                        className="MuiAutocomplete-popupIndicator"
                        disabled={false}
                        onClick={[Function]}
                        tabIndex={-1}
                        title="Open"
                      >
                        <UNDEFINED />
                      </ForwardRef(WithStyles)>
                    </div>,
                    "ref": [Function],
                    "startAdornment": undefined,
                  }
                }
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                disabled={false}
                fullWidth={true}
                id="mui-60608"
                inputProps={
                  Object {
                    "aria-activedescendant": null,
                    "aria-autocomplete": "list",
                    "aria-controls": null,
                    "autoCapitalize": "none",
                    "autoComplete": "off",
                    "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                    "disabled": false,
                    "id": "mui-60608",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "onMouseDown": [Function],
                    "ref": Object {
                      "current": <input
                        aria-autocomplete="list"
                        aria-invalid="false"
                        autocapitalize="none"
                        autocomplete="off"
                        class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                        id="mui-60608"
                        spellcheck="false"
                        type="text"
                        value=""
                      />,
                    },
                    "spellCheck": "false",
                    "value": "",
                  }
                }
                label="Search GitHub"
                variant="outlined"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root"
                  color="primary"
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  required={false}
                  variant="outlined"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={true}
                    required={false}
                    variant="outlined"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                    >
                      <WithStyles(ForwardRef(InputLabel))
                        htmlFor="mui-60608"
                        id="mui-60608-label"
                      >
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                          htmlFor="mui-60608"
                          id="mui-60608-label"
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={false}
                            htmlFor="mui-60608"
                            id="mui-60608-label"
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={false}
                              htmlFor="mui-60608"
                              id="mui-60608-label"
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                data-shrink={false}
                                htmlFor="mui-60608"
                                id="mui-60608-label"
                              >
                                Search GitHub
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(OutlinedInput))
                        autoFocus={false}
                        className="MuiAutocomplete-inputRoot"
                        endAdornment={
                          <div
                            className="MuiAutocomplete-endAdornment"
                          >
                            <ForwardRef(WithStyles)
                              aria-label="Clear"
                              className="MuiAutocomplete-clearIndicator"
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Clear"
                            >
                              <UNDEFINED
                                fontSize="small"
                              />
                            </ForwardRef(WithStyles)>
                            <ForwardRef(WithStyles)
                              aria-label="Open"
                              className="MuiAutocomplete-popupIndicator"
                              disabled={false}
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Open"
                            >
                              <UNDEFINED />
                            </ForwardRef(WithStyles)>
                          </div>
                        }
                        fullWidth={true}
                        id="mui-60608"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "autoCapitalize": "none",
                            "autoComplete": "off",
                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                            "disabled": false,
                            "id": "mui-60608",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "onMouseDown": [Function],
                            "ref": Object {
                              "current": <input
                                aria-autocomplete="list"
                                aria-invalid="false"
                                autocapitalize="none"
                                autocomplete="off"
                                class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                id="mui-60608"
                                spellcheck="false"
                                type="text"
                                value=""
                              />,
                            },
                            "spellCheck": "false",
                            "value": "",
                          }
                        }
                        label={
                          <React.Fragment>
                            Search GitHub
                          </React.Fragment>
                        }
                        multiline={false}
                      >
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          className="MuiAutocomplete-inputRoot"
                          classes={
                            Object {
                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "input": "MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                              "marginDense": "MuiOutlinedInput-marginDense",
                              "multiline": "MuiOutlinedInput-multiline",
                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          endAdornment={
                            <div
                              className="MuiAutocomplete-endAdornment"
                            >
                              <ForwardRef(WithStyles)
                                aria-label="Clear"
                                className="MuiAutocomplete-clearIndicator"
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Clear"
                              >
                                <UNDEFINED
                                  fontSize="small"
                                />
                              </ForwardRef(WithStyles)>
                              <ForwardRef(WithStyles)
                                aria-label="Open"
                                className="MuiAutocomplete-popupIndicator"
                                disabled={false}
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Open"
                              >
                                <UNDEFINED />
                              </ForwardRef(WithStyles)>
                            </div>
                          }
                          fullWidth={true}
                          id="mui-60608"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "autoCapitalize": "none",
                              "autoComplete": "off",
                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                              "disabled": false,
                              "id": "mui-60608",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onMouseDown": [Function],
                              "ref": Object {
                                "current": <input
                                  aria-autocomplete="list"
                                  aria-invalid="false"
                                  autocapitalize="none"
                                  autocomplete="off"
                                  class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  id="mui-60608"
                                  spellcheck="false"
                                  type="text"
                                  value=""
                                />,
                              },
                              "spellCheck": "false",
                              "value": "",
                            }
                          }
                          label={
                            <React.Fragment>
                              Search GitHub
                            </React.Fragment>
                          }
                          multiline={false}
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            className="MuiAutocomplete-inputRoot"
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            endAdornment={
                              <div
                                className="MuiAutocomplete-endAdornment"
                              >
                                <ForwardRef(WithStyles)
                                  aria-label="Clear"
                                  className="MuiAutocomplete-clearIndicator"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Clear"
                                >
                                  <UNDEFINED
                                    fontSize="small"
                                  />
                                </ForwardRef(WithStyles)>
                                <ForwardRef(WithStyles)
                                  aria-label="Open"
                                  className="MuiAutocomplete-popupIndicator"
                                  disabled={false}
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Open"
                                >
                                  <UNDEFINED />
                                </ForwardRef(WithStyles)>
                              </div>
                            }
                            fullWidth={true}
                            id="mui-60608"
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "autoCapitalize": "none",
                                "autoComplete": "off",
                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                "disabled": false,
                                "id": "mui-60608",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "onMouseDown": [Function],
                                "ref": Object {
                                  "current": <input
                                    aria-autocomplete="list"
                                    aria-invalid="false"
                                    autocapitalize="none"
                                    autocomplete="off"
                                    class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                    id="mui-60608"
                                    spellcheck="false"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "spellCheck": "false",
                                "value": "",
                              }
                            }
                            multiline={false}
                            renderSuffix={[Function]}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              className="MuiAutocomplete-inputRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                }
                              }
                              endAdornment={
                                <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <ForwardRef(WithStyles)
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <UNDEFINED
                                      fontSize="small"
                                    />
                                  </ForwardRef(WithStyles)>
                                  <ForwardRef(WithStyles)
                                    aria-label="Open"
                                    className="MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <UNDEFINED />
                                  </ForwardRef(WithStyles)>
                                </div>
                              }
                              fullWidth={true}
                              id="mui-60608"
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-activedescendant": null,
                                  "aria-autocomplete": "list",
                                  "aria-controls": null,
                                  "autoCapitalize": "none",
                                  "autoComplete": "off",
                                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                  "disabled": false,
                                  "id": "mui-60608",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onMouseDown": [Function],
                                  "ref": Object {
                                    "current": <input
                                      aria-autocomplete="list"
                                      aria-invalid="false"
                                      autocapitalize="none"
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="mui-60608"
                                      spellcheck="false"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "spellCheck": "false",
                                  "value": "",
                                }
                              }
                              multiline={false}
                              renderSuffix={[Function]}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                onClick={[Function]}
                              >
                                <input
                                  aria-activedescendant={null}
                                  aria-autocomplete="list"
                                  aria-controls={null}
                                  aria-invalid={false}
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  disabled={false}
                                  id="mui-60608"
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  required={false}
                                  spellCheck="false"
                                  type="text"
                                  value=""
                                />
                                <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="Clear"
                                      className="MuiAutocomplete-clearIndicator"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Clear"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-label="Clear"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-label="Clear"
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Clear"
                                        >
                                          <button
                                            aria-label="Clear"
                                            className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Clear"
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef(CloseIcon)
                                                fontSize="small"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  fontSize="small"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                    fontSize="small"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CloseIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Open"
                                    className="MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="Open"
                                      className="MuiAutocomplete-popupIndicator"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      disabled={false}
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Open"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-label="Open"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Open"
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-label="Open"
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Open"
                                        >
                                          <button
                                            aria-label="Open"
                                            className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-popupIndicator"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Open"
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef(ArrowDropDownIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 10l5 5 5-5z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(ArrowDropDownIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </div>
                                <WithStyles(ForwardRef(NotchedOutline))
                                  className="MuiOutlinedInput-notchedOutline"
                                  label={
                                    <React.Fragment>
                                      Search GitHub
                                    </React.Fragment>
                                  }
                                  labelWidth={0}
                                  notched={false}
                                >
                                  <ForwardRef(NotchedOutline)
                                    className="MuiOutlinedInput-notchedOutline"
                                    classes={
                                      Object {
                                        "legend": "PrivateNotchedOutline-legend-6",
                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                        "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                        "root": "PrivateNotchedOutline-root-5",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Search GitHub
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <fieldset
                                      aria-hidden={true}
                                      className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                    >
                                      <legend
                                        className="PrivateNotchedOutline-legendLabelled-7"
                                      >
                                        <span>
                                          Search GitHub
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </ForwardRef(NotchedOutline)>
                                </WithStyles(ForwardRef(NotchedOutline))>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(OutlinedInput)>
                      </WithStyles(ForwardRef(OutlinedInput))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
          </div>
        </ForwardRef(Autocomplete)>
      </WithStyles(ForwardRef(Autocomplete))>
    </main>
  </div>
</Search>
`;

exports[`Search renders without crashing 4`] = `
<Search
  clearSearchResults={[MockFunction]}
  combinedResults={Array []}
  getSearchResults={[MockFunction]}
  isLoading={true}
>
  <div
    className="container"
  >
    <aside
      className="filters"
    >
      <span
        className="filtersLabel"
      >
        Search within:
      </span>
      <span
        className="filtersControls"
      >
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              color="primary"
              name="Users"
              onChange={[Function]}
            />
          }
          label="Users"
        >
          <ForwardRef(FormControlLabel)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "label": "MuiFormControlLabel-label",
                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                "root": "MuiFormControlLabel-root",
              }
            }
            control={
              <ForwardRef(WithStyles)
                checked={true}
                color="primary"
                name="Users"
                onChange={[Function]}
              />
            }
            label="Users"
          >
            <label
              className="MuiFormControlLabel-root"
            >
              <WithStyles(ForwardRef(Checkbox))
                checked={true}
                color="primary"
                name="Users"
                onChange={[Function]}
              >
                <ForwardRef(Checkbox)
                  checked={true}
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "colorPrimary": "MuiCheckbox-colorPrimary",
                      "colorSecondary": "MuiCheckbox-colorSecondary",
                      "disabled": "Mui-disabled",
                      "indeterminate": "MuiCheckbox-indeterminate",
                      "root": "MuiCheckbox-root",
                    }
                  }
                  color="primary"
                  name="Users"
                  onChange={[Function]}
                >
                  <WithStyles(ForwardRef(SwitchBase))
                    checked={true}
                    checkedIcon={<UNDEFINED />}
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "disabled": "Mui-disabled",
                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                      }
                    }
                    color="primary"
                    icon={<UNDEFINED />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    name="Users"
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <ForwardRef(SwitchBase)
                      checked={true}
                      checkedIcon={<UNDEFINED />}
                      classes={
                        Object {
                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                          "input": "PrivateSwitchBase-input-4",
                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                        }
                      }
                      color="primary"
                      icon={<UNDEFINED />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      name="Users"
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                        color="primary"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(IconButton)
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="primary"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <span
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <input
                                    checked={true}
                                    className="PrivateSwitchBase-input-4"
                                    data-indeterminate={false}
                                    name="Users"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <ForwardRef(CheckBoxIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(CheckBoxIcon)>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </span>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </ForwardRef(SwitchBase)>
                  </WithStyles(ForwardRef(SwitchBase))>
                </ForwardRef(Checkbox)>
              </WithStyles(ForwardRef(Checkbox))>
              <WithStyles(ForwardRef(Typography))
                className="MuiFormControlLabel-label"
                component="span"
              >
                <ForwardRef(Typography)
                  className="MuiFormControlLabel-label"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component="span"
                >
                  <span
                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                  >
                    Users
                  </span>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </label>
          </ForwardRef(FormControlLabel)>
        </WithStyles(ForwardRef(FormControlLabel))>
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              color="primary"
              name="Repos"
              onChange={[Function]}
            />
          }
          label="Repos"
        >
          <ForwardRef(FormControlLabel)
            classes={
              Object {
                "disabled": "Mui-disabled",
                "label": "MuiFormControlLabel-label",
                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                "root": "MuiFormControlLabel-root",
              }
            }
            control={
              <ForwardRef(WithStyles)
                checked={true}
                color="primary"
                name="Repos"
                onChange={[Function]}
              />
            }
            label="Repos"
          >
            <label
              className="MuiFormControlLabel-root"
            >
              <WithStyles(ForwardRef(Checkbox))
                checked={true}
                color="primary"
                name="Repos"
                onChange={[Function]}
              >
                <ForwardRef(Checkbox)
                  checked={true}
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "colorPrimary": "MuiCheckbox-colorPrimary",
                      "colorSecondary": "MuiCheckbox-colorSecondary",
                      "disabled": "Mui-disabled",
                      "indeterminate": "MuiCheckbox-indeterminate",
                      "root": "MuiCheckbox-root",
                    }
                  }
                  color="primary"
                  name="Repos"
                  onChange={[Function]}
                >
                  <WithStyles(ForwardRef(SwitchBase))
                    checked={true}
                    checkedIcon={<UNDEFINED />}
                    classes={
                      Object {
                        "checked": "Mui-checked",
                        "disabled": "Mui-disabled",
                        "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                      }
                    }
                    color="primary"
                    icon={<UNDEFINED />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    name="Repos"
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <ForwardRef(SwitchBase)
                      checked={true}
                      checkedIcon={<UNDEFINED />}
                      classes={
                        Object {
                          "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                          "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                          "input": "PrivateSwitchBase-input-4",
                          "root": "PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary",
                        }
                      }
                      color="primary"
                      icon={<UNDEFINED />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      name="Repos"
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                        color="primary"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <ForwardRef(IconButton)
                          className="PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="primary"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ForwardRef(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <span
                                aria-disabled={false}
                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorPrimary PrivateSwitchBase-checked-2 Mui-checked MuiIconButton-colorPrimary"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <input
                                    checked={true}
                                    className="PrivateSwitchBase-input-4"
                                    data-indeterminate={false}
                                    name="Repos"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <ForwardRef(CheckBoxIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(CheckBoxIcon)>
                                </span>
                                <WithStyles(memo)
                                  center={true}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={true}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </span>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                    </ForwardRef(SwitchBase)>
                  </WithStyles(ForwardRef(SwitchBase))>
                </ForwardRef(Checkbox)>
              </WithStyles(ForwardRef(Checkbox))>
              <WithStyles(ForwardRef(Typography))
                className="MuiFormControlLabel-label"
                component="span"
              >
                <ForwardRef(Typography)
                  className="MuiFormControlLabel-label"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component="span"
                >
                  <span
                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                  >
                    Repos
                  </span>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </label>
          </ForwardRef(FormControlLabel)>
        </WithStyles(ForwardRef(FormControlLabel))>
      </span>
    </aside>
    <main
      className="input"
    >
      <WithStyles(ForwardRef(Autocomplete))
        clearOnBlur={false}
        disabled={false}
        getOptionLabel={[Function]}
        getOptionSelected={[Function]}
        inputValue=""
        loading={true}
        loadingText="Fetching data..."
        onChange={[Function]}
        onInputChange={[Function]}
        options={Array []}
        renderInput={[Function]}
        renderOption={[Function]}
        value={null}
      >
        <ForwardRef(Autocomplete)
          classes={
            Object {
              "clearIndicator": "MuiAutocomplete-clearIndicator",
              "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
              "endAdornment": "MuiAutocomplete-endAdornment",
              "focused": "Mui-focused",
              "fullWidth": "MuiAutocomplete-fullWidth",
              "groupLabel": "MuiAutocomplete-groupLabel",
              "groupUl": "MuiAutocomplete-groupUl",
              "hasClearIcon": "MuiAutocomplete-hasClearIcon",
              "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
              "input": "MuiAutocomplete-input",
              "inputFocused": "MuiAutocomplete-inputFocused",
              "inputRoot": "MuiAutocomplete-inputRoot",
              "listbox": "MuiAutocomplete-listbox",
              "loading": "MuiAutocomplete-loading",
              "noOptions": "MuiAutocomplete-noOptions",
              "option": "MuiAutocomplete-option",
              "paper": "MuiAutocomplete-paper",
              "popper": "MuiAutocomplete-popper",
              "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
              "popupIndicator": "MuiAutocomplete-popupIndicator",
              "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
              "root": "MuiAutocomplete-root",
              "tag": "MuiAutocomplete-tag",
              "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
            }
          }
          clearOnBlur={false}
          disabled={false}
          getOptionLabel={[Function]}
          getOptionSelected={[Function]}
          inputValue=""
          loading={true}
          loadingText="Fetching data..."
          onChange={[Function]}
          onInputChange={[Function]}
          options={Array []}
          renderInput={[Function]}
          renderOption={[Function]}
          value={null}
        >
          <div
            aria-expanded={false}
            aria-owns={null}
            className="MuiAutocomplete-root MuiAutocomplete-hasClearIcon MuiAutocomplete-hasPopupIcon"
            onClick={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            role="combobox"
          >
            <WithStyles(ForwardRef(TextField))
              InputLabelProps={
                Object {
                  "htmlFor": "mui-429",
                  "id": "mui-429-label",
                }
              }
              InputProps={
                Object {
                  "className": "MuiAutocomplete-inputRoot",
                  "endAdornment": <div
                    className="MuiAutocomplete-endAdornment"
                  >
                    <ForwardRef(WithStyles)
                      aria-label="Clear"
                      className="MuiAutocomplete-clearIndicator"
                      onClick={[Function]}
                      tabIndex={-1}
                      title="Clear"
                    >
                      <UNDEFINED
                        fontSize="small"
                      />
                    </ForwardRef(WithStyles)>
                    <ForwardRef(WithStyles)
                      aria-label="Open"
                      className="MuiAutocomplete-popupIndicator"
                      disabled={false}
                      onClick={[Function]}
                      tabIndex={-1}
                      title="Open"
                    >
                      <UNDEFINED />
                    </ForwardRef(WithStyles)>
                  </div>,
                  "ref": [Function],
                  "startAdornment": undefined,
                }
              }
              disabled={false}
              fullWidth={true}
              id="mui-429"
              inputProps={
                Object {
                  "aria-activedescendant": null,
                  "aria-autocomplete": "list",
                  "aria-controls": null,
                  "autoCapitalize": "none",
                  "autoComplete": "off",
                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                  "disabled": false,
                  "id": "mui-429",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "onMouseDown": [Function],
                  "ref": Object {
                    "current": <input
                      aria-autocomplete="list"
                      aria-invalid="false"
                      autocapitalize="none"
                      autocomplete="off"
                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                      id="mui-429"
                      spellcheck="false"
                      type="text"
                      value=""
                    />,
                  },
                  "spellCheck": "false",
                  "value": "",
                }
              }
              label="Search GitHub"
              variant="outlined"
            >
              <ForwardRef(TextField)
                InputLabelProps={
                  Object {
                    "htmlFor": "mui-429",
                    "id": "mui-429-label",
                  }
                }
                InputProps={
                  Object {
                    "className": "MuiAutocomplete-inputRoot",
                    "endAdornment": <div
                      className="MuiAutocomplete-endAdornment"
                    >
                      <ForwardRef(WithStyles)
                        aria-label="Clear"
                        className="MuiAutocomplete-clearIndicator"
                        onClick={[Function]}
                        tabIndex={-1}
                        title="Clear"
                      >
                        <UNDEFINED
                          fontSize="small"
                        />
                      </ForwardRef(WithStyles)>
                      <ForwardRef(WithStyles)
                        aria-label="Open"
                        className="MuiAutocomplete-popupIndicator"
                        disabled={false}
                        onClick={[Function]}
                        tabIndex={-1}
                        title="Open"
                      >
                        <UNDEFINED />
                      </ForwardRef(WithStyles)>
                    </div>,
                    "ref": [Function],
                    "startAdornment": undefined,
                  }
                }
                classes={
                  Object {
                    "root": "MuiTextField-root",
                  }
                }
                disabled={false}
                fullWidth={true}
                id="mui-429"
                inputProps={
                  Object {
                    "aria-activedescendant": null,
                    "aria-autocomplete": "list",
                    "aria-controls": null,
                    "autoCapitalize": "none",
                    "autoComplete": "off",
                    "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                    "disabled": false,
                    "id": "mui-429",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "onMouseDown": [Function],
                    "ref": Object {
                      "current": <input
                        aria-autocomplete="list"
                        aria-invalid="false"
                        autocapitalize="none"
                        autocomplete="off"
                        class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                        id="mui-429"
                        spellcheck="false"
                        type="text"
                        value=""
                      />,
                    },
                    "spellCheck": "false",
                    "value": "",
                  }
                }
                label="Search GitHub"
                variant="outlined"
              >
                <WithStyles(ForwardRef(FormControl))
                  className="MuiTextField-root"
                  color="primary"
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  required={false}
                  variant="outlined"
                >
                  <ForwardRef(FormControl)
                    className="MuiTextField-root"
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={true}
                    required={false}
                    variant="outlined"
                  >
                    <div
                      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                    >
                      <WithStyles(ForwardRef(InputLabel))
                        htmlFor="mui-429"
                        id="mui-429-label"
                      >
                        <ForwardRef(InputLabel)
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated",
                              "asterisk": "MuiInputLabel-asterisk",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "filled": "MuiInputLabel-filled",
                              "focused": "Mui-focused",
                              "formControl": "MuiInputLabel-formControl",
                              "marginDense": "MuiInputLabel-marginDense",
                              "outlined": "MuiInputLabel-outlined",
                              "required": "Mui-required",
                              "root": "MuiInputLabel-root",
                              "shrink": "MuiInputLabel-shrink",
                            }
                          }
                          htmlFor="mui-429"
                          id="mui-429-label"
                        >
                          <WithStyles(ForwardRef(FormLabel))
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                            classes={
                              Object {
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                              }
                            }
                            data-shrink={false}
                            htmlFor="mui-429"
                            id="mui-429-label"
                          >
                            <ForwardRef(FormLabel)
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "filled": "MuiFormLabel-filled",
                                  "focused": "Mui-focused Mui-focused",
                                  "required": "Mui-required Mui-required",
                                  "root": "MuiFormLabel-root",
                                }
                              }
                              data-shrink={false}
                              htmlFor="mui-429"
                              id="mui-429-label"
                            >
                              <label
                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                data-shrink={false}
                                htmlFor="mui-429"
                                id="mui-429-label"
                              >
                                Search GitHub
                              </label>
                            </ForwardRef(FormLabel)>
                          </WithStyles(ForwardRef(FormLabel))>
                        </ForwardRef(InputLabel)>
                      </WithStyles(ForwardRef(InputLabel))>
                      <WithStyles(ForwardRef(OutlinedInput))
                        autoFocus={false}
                        className="MuiAutocomplete-inputRoot"
                        endAdornment={
                          <div
                            className="MuiAutocomplete-endAdornment"
                          >
                            <ForwardRef(WithStyles)
                              aria-label="Clear"
                              className="MuiAutocomplete-clearIndicator"
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Clear"
                            >
                              <UNDEFINED
                                fontSize="small"
                              />
                            </ForwardRef(WithStyles)>
                            <ForwardRef(WithStyles)
                              aria-label="Open"
                              className="MuiAutocomplete-popupIndicator"
                              disabled={false}
                              onClick={[Function]}
                              tabIndex={-1}
                              title="Open"
                            >
                              <UNDEFINED />
                            </ForwardRef(WithStyles)>
                          </div>
                        }
                        fullWidth={true}
                        id="mui-429"
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": null,
                            "autoCapitalize": "none",
                            "autoComplete": "off",
                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                            "disabled": false,
                            "id": "mui-429",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "onMouseDown": [Function],
                            "ref": Object {
                              "current": <input
                                aria-autocomplete="list"
                                aria-invalid="false"
                                autocapitalize="none"
                                autocomplete="off"
                                class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                id="mui-429"
                                spellcheck="false"
                                type="text"
                                value=""
                              />,
                            },
                            "spellCheck": "false",
                            "value": "",
                          }
                        }
                        label={
                          <React.Fragment>
                            Search GitHub
                          </React.Fragment>
                        }
                        multiline={false}
                      >
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          className="MuiAutocomplete-inputRoot"
                          classes={
                            Object {
                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled",
                              "error": "Mui-error",
                              "focused": "Mui-focused",
                              "input": "MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                              "marginDense": "MuiOutlinedInput-marginDense",
                              "multiline": "MuiOutlinedInput-multiline",
                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          endAdornment={
                            <div
                              className="MuiAutocomplete-endAdornment"
                            >
                              <ForwardRef(WithStyles)
                                aria-label="Clear"
                                className="MuiAutocomplete-clearIndicator"
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Clear"
                              >
                                <UNDEFINED
                                  fontSize="small"
                                />
                              </ForwardRef(WithStyles)>
                              <ForwardRef(WithStyles)
                                aria-label="Open"
                                className="MuiAutocomplete-popupIndicator"
                                disabled={false}
                                onClick={[Function]}
                                tabIndex={-1}
                                title="Open"
                              >
                                <UNDEFINED />
                              </ForwardRef(WithStyles)>
                            </div>
                          }
                          fullWidth={true}
                          id="mui-429"
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": null,
                              "autoCapitalize": "none",
                              "autoComplete": "off",
                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                              "disabled": false,
                              "id": "mui-429",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onMouseDown": [Function],
                              "ref": Object {
                                "current": <input
                                  aria-autocomplete="list"
                                  aria-invalid="false"
                                  autocapitalize="none"
                                  autocomplete="off"
                                  class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  id="mui-429"
                                  spellcheck="false"
                                  type="text"
                                  value=""
                                />,
                              },
                              "spellCheck": "false",
                              "value": "",
                            }
                          }
                          label={
                            <React.Fragment>
                              Search GitHub
                            </React.Fragment>
                          }
                          multiline={false}
                        >
                          <WithStyles(ForwardRef(InputBase))
                            autoFocus={false}
                            className="MuiAutocomplete-inputRoot"
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            endAdornment={
                              <div
                                className="MuiAutocomplete-endAdornment"
                              >
                                <ForwardRef(WithStyles)
                                  aria-label="Clear"
                                  className="MuiAutocomplete-clearIndicator"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Clear"
                                >
                                  <UNDEFINED
                                    fontSize="small"
                                  />
                                </ForwardRef(WithStyles)>
                                <ForwardRef(WithStyles)
                                  aria-label="Open"
                                  className="MuiAutocomplete-popupIndicator"
                                  disabled={false}
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Open"
                                >
                                  <UNDEFINED />
                                </ForwardRef(WithStyles)>
                              </div>
                            }
                            fullWidth={true}
                            id="mui-429"
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "autoCapitalize": "none",
                                "autoComplete": "off",
                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                "disabled": false,
                                "id": "mui-429",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "onMouseDown": [Function],
                                "ref": Object {
                                  "current": <input
                                    aria-autocomplete="list"
                                    aria-invalid="false"
                                    autocapitalize="none"
                                    autocomplete="off"
                                    class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                    id="mui-429"
                                    spellcheck="false"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "spellCheck": "false",
                                "value": "",
                              }
                            }
                            multiline={false}
                            renderSuffix={[Function]}
                            type="text"
                          >
                            <ForwardRef(InputBase)
                              autoFocus={false}
                              className="MuiAutocomplete-inputRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled Mui-disabled",
                                  "error": "Mui-error Mui-error",
                                  "focused": "Mui-focused Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                }
                              }
                              endAdornment={
                                <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <ForwardRef(WithStyles)
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <UNDEFINED
                                      fontSize="small"
                                    />
                                  </ForwardRef(WithStyles)>
                                  <ForwardRef(WithStyles)
                                    aria-label="Open"
                                    className="MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <UNDEFINED />
                                  </ForwardRef(WithStyles)>
                                </div>
                              }
                              fullWidth={true}
                              id="mui-429"
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-activedescendant": null,
                                  "aria-autocomplete": "list",
                                  "aria-controls": null,
                                  "autoCapitalize": "none",
                                  "autoComplete": "off",
                                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                  "disabled": false,
                                  "id": "mui-429",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onMouseDown": [Function],
                                  "ref": Object {
                                    "current": <input
                                      aria-autocomplete="list"
                                      aria-invalid="false"
                                      autocapitalize="none"
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="mui-429"
                                      spellcheck="false"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "spellCheck": "false",
                                  "value": "",
                                }
                              }
                              multiline={false}
                              renderSuffix={[Function]}
                              type="text"
                            >
                              <div
                                className="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                onClick={[Function]}
                              >
                                <input
                                  aria-activedescendant={null}
                                  aria-autocomplete="list"
                                  aria-controls={null}
                                  aria-invalid={false}
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoFocus={false}
                                  className="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                  disabled={false}
                                  id="mui-429"
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  required={false}
                                  spellCheck="false"
                                  type="text"
                                  value=""
                                />
                                <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="Clear"
                                      className="MuiAutocomplete-clearIndicator"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Clear"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-label="Clear"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-label="Clear"
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Clear"
                                        >
                                          <button
                                            aria-label="Clear"
                                            className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Clear"
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef(CloseIcon)
                                                fontSize="small"
                                              >
                                                <WithStyles(ForwardRef(SvgIcon))
                                                  fontSize="small"
                                                >
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                    fontSize="small"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CloseIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Open"
                                    className="MuiAutocomplete-popupIndicator"
                                    disabled={false}
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Open"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="Open"
                                      className="MuiAutocomplete-popupIndicator"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      disabled={false}
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Open"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-label="Open"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Open"
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-label="Open"
                                          centerRipple={true}
                                          className="MuiIconButton-root MuiAutocomplete-popupIndicator"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Open"
                                        >
                                          <button
                                            aria-label="Open"
                                            className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-popupIndicator"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={-1}
                                            title="Open"
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef(ArrowDropDownIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 10l5 5 5-5z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(ArrowDropDownIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </div>
                                <WithStyles(ForwardRef(NotchedOutline))
                                  className="MuiOutlinedInput-notchedOutline"
                                  label={
                                    <React.Fragment>
                                      Search GitHub
                                    </React.Fragment>
                                  }
                                  labelWidth={0}
                                  notched={false}
                                >
                                  <ForwardRef(NotchedOutline)
                                    className="MuiOutlinedInput-notchedOutline"
                                    classes={
                                      Object {
                                        "legend": "PrivateNotchedOutline-legend-6",
                                        "legendLabelled": "PrivateNotchedOutline-legendLabelled-7",
                                        "legendNotched": "PrivateNotchedOutline-legendNotched-8",
                                        "root": "PrivateNotchedOutline-root-5",
                                      }
                                    }
                                    label={
                                      <React.Fragment>
                                        Search GitHub
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <fieldset
                                      aria-hidden={true}
                                      className="PrivateNotchedOutline-root-5 MuiOutlinedInput-notchedOutline"
                                    >
                                      <legend
                                        className="PrivateNotchedOutline-legendLabelled-7"
                                      >
                                        <span>
                                          Search GitHub
                                        </span>
                                      </legend>
                                    </fieldset>
                                  </ForwardRef(NotchedOutline)>
                                </WithStyles(ForwardRef(NotchedOutline))>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(OutlinedInput)>
                      </WithStyles(ForwardRef(OutlinedInput))>
                    </div>
                  </ForwardRef(FormControl)>
                </WithStyles(ForwardRef(FormControl))>
              </ForwardRef(TextField)>
            </WithStyles(ForwardRef(TextField))>
          </div>
        </ForwardRef(Autocomplete)>
      </WithStyles(ForwardRef(Autocomplete))>
    </main>
  </div>
</Search>
`;
